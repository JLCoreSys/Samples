<?php
/**
 * This file is part of the CoreSysUserBundle package.
 * (c) J&L Core Systems http://jlcoresystems.com | http://joshmccreight.com
 */

namespace CoreSys\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AccessRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AccessRepository extends EntityRepository
{

    public function getCount( $active = NULL )
    {
        $q = $this->createQueryBuilder( 'r' )
                  ->select( 'COUNT(r.id)' );

        if ( !empty( $active ) ) {
            $active = $active === TRUE;
            $q->where( 'r.active = :active' )
              ->setParameter( 'active', $active );
        }

        $q = $q->getQuery();

        return $q->getSingleScalarResult();
    }

    public function search( $sort = 'id', $sort_dir = 'desc', $offset = 0, $length = 50, $search_string = NULL, $search_col = NULL )
    {
        $sort     = !empty( $sort ) ? $sort : 'id';
        $sort_dir = $sort_dir == 'asc' ? 'asc' : 'desc';

        $q = $this->createQueryBuilder( 'r' )
                  ->orderBy( 'r.' . $sort, $sort_dir )
                  ->setFirstResult( $offset )
                  ->setMaxResults( $length );

        if ( !empty( $search_string ) ) {
            $q->where( 'r.name LIKE :search' )
              ->setParameter( 'search', '%' . $search_string . '%' );
        }

        $q = $q->getQuery();

        return $q->getResult();
    }

    public function searchCount( $search_string = NULL, $search_col = NULL )
    {
        $q = $this->createQueryBuilder( 'r' )
                  ->select( 'COUNT(r.id)' );

        if ( !empty( $search_string ) ) {
            $q->where( 'r.name LIKE :search' )
              ->setParameter( 'search', '%' . $search_string . '%' );
        }


        $q = $q->getQuery();

        return $q->getSingleScalarResult();
    }
}
